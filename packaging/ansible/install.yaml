---
- name: Install facility reconciliation tool
  hosts: all
  remote_user: "{{ user }}"
  tags: install


  vars_prompt:
    - name: "user"
      prompt: "Please enter the username (without sudo)"
      private: no

  tasks:

  - name: Does hearth fhir server folder exist
    stat:
      path: $HOME/hearth
    register: stat_result2


  - name: git clone hearth repo
    git:
      repo: 'https://github.com/intrahealth/hearth.git'
      dest: $HOME/hearth
      clone: yes
      update: yes
    when: stat_result2.stat.exists == False


  - name: git pull for hearth
    shell: cd $HOME/hearth && git pull


# this fails
  # - name: Hearth - Install/update packages based on package.json.
  #   npm:
  #     path: $HOME/hearth
  #     state: latest

  - name: npm build of hearth
    shell: cd $HOME/hearth && npm install


  - name: Does facility-recon folder exist
    stat:
      path: $HOME/facility-recon
    register: stat_result3


  - name: git clone facility-recon repo
    git:
      repo: 'https://github.com/openhie/facility-recon.git'
      dest: $HOME/facility-recon
      # clone datim branch
      version: facility-recon-datim
      clone: yes
      update: yes
    when: stat_result3.stat.exists == False


  - name: git pull for facility-recon
    shell: cd $HOME/facility-recon && git pull


  - name: Backend - Install/update packages based on package.json.
    npm:
      path: $HOME/facility-recon/facility-recon-backend
      state: latest


  - name: checking dist folder for dhis2 app
    stat:
      path: $HOME/facility-recon/facility-recon-gui/dist
    register: huh


  - debug:
      msg: "dhis2 app was (already) built"
    when: huh.stat.exists and huh.stat.isdir


  - name: copy static web app files generated by npm run build for dhis2 app
    shell: cp -r $HOME/facility-recon/facility-recon-gui/dist/* $HOME/facility-recon/dhis2App/
    register: helloagain2


  - debug: msg="{{ helloagain2.stdout_lines }}"


  - name: remove previous dhis2 app if it exists
    file:
      path: $HOME/facility-recon/dhis2App/GOFR.zip
      state: absent


  - name: create a zip archive of dhis2App as GOFR.zip
    archive:
      path: $HOME/facility-recon/dhis2App/*
      dest: $HOME/facility-recon/dhis2App/GOFR.zip
      format: zip

